name: Infrastructure Pipeline

on:
  push:
    branches:
      - dev
      - prod
  workflow_dispatch:

jobs:
  setup:
    if: github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/prod'
    runs-on: ubuntu-latest
    container:
      image: 1kan/birkan-terraform-azure:1.10.5
      options: --user root

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # - name: Set up Azure CLI
      #   run: |
      #     apt-get update && apt-get install -y curl
      #     curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Log in to Azure
        run: az login

      - name: Run Terraform Init
        run: |
          cd environments/${{ github.ref == 'refs/heads/dev' && 'dev' || (github.ref == 'refs/heads/main' && 'prod' || '') }}
          chmod +x store-tfstate.sh
          source store-tfstate.sh "${{ secrets.TENANT_ID }}" \
                                  "${{ secrets.SUBSCRIPTION_ID }}" \
                                  "${{ secrets.USER_EMAIL }}" \
                                  "${{ secrets.RESOURCE_GROUP_NAME }}" \
                                  "${{ secrets.STORAGE_ACCOUNT_NAME }}" \
                                  "${{ secrets.CONTAINER_NAME }}" \
                                  "${{ secrets.KEYVAULT_NAME }}" \
                                  "${{ secrets.SECRET_NAME }}" \
                                  "${{ secrets.LOCATION }}"

          terraform init -backend-config="resource_group_name=$RESOURCE_GROUP_NAME" \
               -backend-config="storage_account_name=$STORAGE_ACCOUNT_NAME" \
               -backend-config="container_name=$CONTAINER_NAME" \
               -reconfigure

      - name: Run Terraform Plan
        run: |
          cd environments/${{ github.ref == 'refs/heads/dev' && 'dev' || (github.ref == 'refs/heads/main' && 'prod' || '') }}  
          terraform plan -var="subscription_id=$SUBSCRIPTION_ID"

      - name: Run Terraform Apply
        run: |
          cd environments/${{ github.ref == 'refs/heads/dev' && 'dev' || (github.ref == 'refs/heads/main' && 'prod' || '') }}  
          terraform apply -auto-approve -var="subscription_id=${{ secrets.SUBSCRIPTION_ID }}"

  teardown:
    if: ${{ github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/prod' }}
    runs-on: ubuntu-latest
    container:
      image: 1kan/birkan-terraform-azure:1.10.5
      options: --user root
    needs: setup

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # - name: Set up Azure CLI
      #   run: |
      #     apt-get update && apt-get install -y curl
      #     curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Log in to Azure
        run: az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}

      - name: Run Terraform Destroy
        run: |
          cd environments/${{ github.ref == 'refs/heads/dev' && 'dev' || (github.ref == 'refs/heads/main' && 'prod' || '') }}  
          terraform init -backend-config="resource_group_name=${{ secrets.RESOURCE_GROUP_NAME }}" \
                         -backend-config="storage_account_name=${{ secrets.STORAGE_ACCOUNT_NAME }}" \
                         -backend-config="container_name=${{ secrets.CONTAINER_NAME }}" \
                         -reconfigure
          terraform destroy -auto-approve -var="subscription_id=${{ secrets.SUBSCRIPTION_ID }}"
